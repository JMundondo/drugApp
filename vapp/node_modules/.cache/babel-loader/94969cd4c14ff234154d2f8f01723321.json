{"remainingRequest":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\GetManufacturer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\GetManufacturer.vue","mtime":1611660589240},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/Jephias T Mundondo/OneDrive/Desktop/drugApp/vapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'GetManufacturer',\n  computed: _objectSpread(_objectSpread({}, mapGetters('contracts', ['getContractData'])), mapGetters('drizzle', ['isDrizzleInitialized'])),\n  methods: {\n    onSubmit: function onSubmit(id) {\n      var _this = this;\n\n      return this.getContractData({\n        contract: 'DrugTracking',\n        method: 'manufacturers',\n        methodsArgs: [id]\n      }).then(function (manufacturer) {\n        _this.id = manufacturer[0];\n        _this.name = manufacturer[1];\n        _this.account = manufacturer[2];\n      });\n    }\n  },\n  data: function data() {\n    return {\n      id: '',\n      name: '',\n      account: ''\n    };\n  }\n};",{"version":3,"sources":["GetManufacturer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA,WAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,UAAA,CAAA,SAAA,EAAA,CAAA,sBAAA,CAAA,CAFA,CAHA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,EADA,EACA;AAAA;;AAEA,aAAA,KAAA,eAAA,CAAA;AACA,QAAA,QAAA,EAAA,cADA;AAEA,QAAA,MAAA,EAAA,eAFA;AAGA,QAAA,WAAA,EAAA,CAAA,EAAA;AAHA,OAAA,EAMA,IANA,CAOA,UAAA,YAAA,EAAA;AACA,QAAA,KAAA,CAAA,EAAA,GAAA,YAAA,CAAA,CAAA,CAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,YAAA,CAAA,CAAA,CAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,YAAA,CAAA,CAAA,CAAA;AAEA,OAZA,CAAA;AAgBA;AAnBA,GATA;AA+BA,EAAA,IA/BA,kBA+BA;AACA,WAAA;AAEA,MAAA,EAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAOA;AAvCA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n   \r\n    <div>\r\n       <form>\r\n        <input v-model=\"id\" type=\"number\" placeholder=\"manufacturer id\" /> \r\n        <button @click.prevent=\"onSubmit\">find</button>\r\n       </form>\r\n    </div>\r\n    <div>\r\n      <h2>manufacturer id :{{id}} \r\n          manufacturer name : {{name}}\r\n          manufacturer account :{{account}}\r\n      </h2>\r\n    </div>\r\n  </div>\r\n\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'GetManufacturer',\r\n\r\n  computed: {\r\n    ...mapGetters('contracts', ['getContractData']),\r\n    ...mapGetters('drizzle', ['isDrizzleInitialized']),\r\n    \r\n  \r\n  },\r\n  methods:{\r\n      onSubmit(id){\r\n         \r\n      return this.getContractData({\r\n        contract: 'DrugTracking',\r\n        method: 'manufacturers',\r\n        methodsArgs:[id]\r\n        \r\n        \r\n      }).then(\r\n             manufacturer => {\r\n                  this.id = manufacturer[0] ;\r\n                  this.name = manufacturer[1];\r\n                  this.account = manufacturer[2];\r\n\r\n              }\r\n          ) ;\r\n         \r\n\r\n      }\r\n\r\n  },\r\n  data(){\r\n      return{\r\n        \r\n          id:'',\r\n          name:'',\r\n          account:''\r\n      }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>"],"sourceRoot":"src"}]}
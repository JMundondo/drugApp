{"remainingRequest":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\RegisterDrug.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\RegisterDrug.vue","mtime":1611694248861},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/Jephias T Mundondo/OneDrive/Desktop/drugApp/vapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'RegisterDrug',\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters('contracts', ['getContractData'])), mapGetters('drizzle', ['isDrizzleInitialized'])), {}, {\n    createdDrug: function createdDrug() {\n      return this.getContractData({\n        contract: 'DrugTracking',\n        method: 'createdDrug'\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n\n    var contractEventHandler = function contractEventHandler(_ref) {\n      var contractName = _ref.contractName,\n          eventName = _ref.eventName,\n          data = _ref.data;\n\n      if (eventName == 'createDrugs') {\n        var display = \"\".concat(contractName, \"(\").concat(eventName, \"):\").concat(data._serialNumbers, \" , \").concat(data._ndcs, \" ,\").concat(data._names, \" , \").concat(data._manufacturerNames);\n        var subOptions = {\n          duration: 6000\n        };\n\n        _this.$toasted.show(display, subOptions);\n      }\n    };\n\n    this.$drizzleEvents.$on('drizzle/contractEvent', function (payload) {\n      contractEventHandler(payload);\n    });\n  },\n  data: function data() {\n    return {\n      sample: {\n        createdDrug: {\n          html: 'Last Registered Manufacturer From the  BlockChain'\n        }\n      }\n    };\n  }\n};",{"version":3,"sources":["RegisterDrug.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAGA,EAAA,QAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,UAAA,CAAA,SAAA,EAAA,CAAA,sBAAA,CAAA,CAFA;AAGA,IAAA,WAHA,yBAGA;AACA,aAAA,KAAA,eAAA,CAAA;AACA,QAAA,QAAA,EAAA,cADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA,CAAA;AAIA;AARA,IAHA;AAaA,EAAA,OAbA,qBAaA;AAAA;;AAEA,QAAA,oBAAA,GAAA,SAAA,oBAAA,OAAA;AAAA,UAAA,YAAA,QAAA,YAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AAAA,UAAA,IAAA,QAAA,IAAA;;AAEA,UAAA,SAAA,IAAA,aAAA,EAAA;AAGA,YAAA,OAAA,aAAA,YAAA,cAAA,SAAA,eAAA,IAAA,CAAA,cAAA,gBAAA,IAAA,CAAA,KAAA,eAAA,IAAA,CAAA,MAAA,gBAAA,IAAA,CAAA,kBAAA,CAAA;AAEA,YAAA,UAAA,GAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,UAAA;AACA;AAMA,KAfA;;AAiBA,SAAA,cAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,UAAA,OAAA,EAAA;AACA,MAAA,oBAAA,CAAA,OAAA,CAAA;AAEA,KAHA;AAOA,GAvCA;AAwCA,EAAA,IAxCA,kBAwCA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AAEA,QAAA,WAAA,EAAA;AACA,UAAA,IAAA,EACA;AAFA;AAFA;AADA,KAAA;AASA;AAlDA,CAAA","sourcesContent":["<template>\r\n  <div v-if=\"isDrizzleInitialized\">\r\n    <div>\r\n    <div class=\"yoo\">\r\n    <h1>Only Registered Manufacturer </h1>\r\n    </div>\r\n    <drizzle-contract\r\n        contractName=\"DrugTracking\"\r\n        method=\"drugsCount\"\r\n        label=\"Number of Drugs in the System\"\r\n      />\r\n       <h3>Registered Manufacturer</h3>\r\n    <div class=\"flex-container\">\r\n      <div class=\"code\">{{ sample.createdDrug.html }}</div>\r\n      <drizzle-contract contractName=\"DrugTracking\" method=\"createdDrug\" />\r\n    </div>\r\n    \r\n      \r\n      <drizzle-contract-form\r\n        contractName=\"DrugTracking\"\r\n        method=\"registerDrug\"\r\n        :placeholders=\"['serialNumber','ndc','name of drug','manufacturerName']\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div v-else>Loading...</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'RegisterDrug',\r\n\r\n     computed: {\r\n    ...mapGetters('contracts', ['getContractData']),\r\n    ...mapGetters('drizzle', ['isDrizzleInitialized']),\r\n       createdDrug() {\r\n      return this.getContractData({\r\n        contract: 'DrugTracking',\r\n        method: 'createdDrug'\r\n      })\r\n    }\r\n  },\r\n   mounted(){\r\n  \r\n        const contractEventHandler = ({contractName , eventName , data}) =>{\r\n            \r\n         if(eventName == 'createDrugs'){\r\n           \r\n\r\n     const display = `${contractName}(${eventName}):${data._serialNumbers} , ${data._ndcs} ,${data._names} , ${data._manufacturerNames}`;\r\n          \r\n    const subOptions = {duration:6000} ;\r\n    this.$toasted.show(display , subOptions);\r\n         }\r\n         \r\n          \r\n        \r\n\r\n        \r\n        }\r\n        \r\n        this.$drizzleEvents.$on('drizzle/contractEvent' , payload =>{\r\n        contractEventHandler(payload) ;\r\n        \r\n        }\r\n        \r\n        );\r\n    \r\n    },\r\n   data() {\r\n    return {\r\n      sample: {\r\n      \r\n        createdDrug: {\r\n          html:\r\n            'Last Registered Manufacturer From the  BlockChain'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv.yoo {\r\n  background-color: #043112;\r\n  text-align: center;\r\n  \r\n}\r\ndiv.code {\r\n  align-self: center;\r\n}\r\n\r\ndiv.flex-container {\r\n  background-color: #c93b22;\r\n  \r\n  display: flex;\r\n}\r\n\r\ndiv.flex-container > div {\r\n  flex: 1;\r\n}\r\n</style>"],"sourceRoot":"src"}]}
{"remainingRequest":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\Toast.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\src\\Toast.vue","mtime":1611692040690},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jephias T Mundondo\\OneDrive\\Desktop\\drugApp\\vapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//import { generateStore, EventActions } from '@drizzle/store';\n//import  Toasted from 'vue-toasted';\n//import Vue from 'vue';\n//Vue.use('Toasted');\nexport default {\n  name: 'Toast',\n  mounted: function mounted() {\n    var _this = this;\n\n    /*   const contractEventNotifier = store => next => action => {\r\n    if (action.type === EventActions.EVENT_FIRED) {\r\n    const contract = action.name\r\n    const contractEvent = action.event.event\r\n    const message = action.event.returnValues._message\r\n    const display = `${contract}(${contractEvent}): ${message}`\r\n     toast.success(display, { position: toast.POSITION.TOP_RIGHT })\r\n    }\r\n    return next(action)\r\n    }*/\n    var contractEventHandler = function contractEventHandler(_ref) {\n      var contractName = _ref.contractName,\n          eventName = _ref.eventName,\n          data = _ref.data;\n\n      if (eventName == 'registerManufacturers') {\n        var display = \"\".concat(contractName, \"(\").concat(eventName, \"):\").concat(data._names, \" , \").concat(data._accounts);\n        alert(\"\".concat(contractName, \"(\").concat(eventName, \"):\").concat(data._names, \" , \").concat(data._accounts));\n        var subOptions = {\n          duration: 3000\n        };\n\n        _this.$toasted.show(display, subOptions);\n      }\n    };\n\n    this.$drizzleEvents.$on('drizzle/contractEvent', function (payload) {\n      contractEventHandler(payload);\n    });\n  }\n};",{"version":3,"sources":["Toast.vue"],"names":[],"mappings":";;;;;AAMA;AAEA;AACA;AACA;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAIA,EAAA,OAJA,qBAIA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,QAAA,oBAAA,GAAA,SAAA,oBAAA,OAAA;AAAA,UAAA,YAAA,QAAA,YAAA;AAAA,UAAA,SAAA,QAAA,SAAA;AAAA,UAAA,IAAA,QAAA,IAAA;;AAEA,UAAA,SAAA,IAAA,uBAAA,EAAA;AAGA,YAAA,OAAA,aAAA,YAAA,cAAA,SAAA,eAAA,IAAA,CAAA,MAAA,gBAAA,IAAA,CAAA,SAAA,CAAA;AACA,QAAA,KAAA,WAAA,YAAA,cAAA,SAAA,eAAA,IAAA,CAAA,MAAA,gBAAA,IAAA,CAAA,SAAA,EAAA;AACA,YAAA,UAAA,GAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA,UAAA;AACA;AAMA,KAfA;;AAiBA,SAAA,cAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,UAAA,OAAA,EAAA;AACA,MAAA,oBAAA,CAAA,OAAA,CAAA;AAEA,KAHA;AAOA;AAxCA,CAAA","sourcesContent":["<template>\r\n<section></section>\r\n\r\n    \r\n</template>\r\n<script>\r\n//import { generateStore, EventActions } from '@drizzle/store';\r\n\r\n//import  Toasted from 'vue-toasted';\r\n//import Vue from 'vue';\r\n//Vue.use('Toasted');\r\n\r\n\r\n\r\n\r\nexport default {\r\n    name: 'Toast',\r\n  \r\n    \r\n    mounted(){\r\n     /*   const contractEventNotifier = store => next => action => {\r\n  if (action.type === EventActions.EVENT_FIRED) {\r\n    const contract = action.name\r\n    const contractEvent = action.event.event\r\n    const message = action.event.returnValues._message\r\n    const display = `${contract}(${contractEvent}): ${message}`\r\n\r\n    toast.success(display, { position: toast.POSITION.TOP_RIGHT })\r\n  }\r\n  return next(action)\r\n}*/\r\n        const contractEventHandler = ({contractName , eventName , data}) =>{\r\n            \r\n         if(eventName == 'registerManufacturers'){\r\n           \r\n\r\n            const display = `${contractName}(${eventName}):${data._names} , ${data._accounts}`;\r\n          alert(`${contractName}(${eventName}):${data._names} , ${data._accounts}`) ;\r\n          const subOptions = {duration:3000} ;\r\n          this.$toasted.show(display , subOptions);\r\n         }\r\n         \r\n          \r\n        \r\n\r\n        \r\n        }\r\n        \r\n        this.$drizzleEvents.$on('drizzle/contractEvent' , payload =>{\r\n        contractEventHandler(payload) ;\r\n        \r\n        }\r\n        \r\n        );\r\n    \r\n    },\r\n    \r\n   \r\n    }\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n \r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src"}]}